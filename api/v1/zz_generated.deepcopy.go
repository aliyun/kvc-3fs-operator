//go:build !ignore_autogenerated

/*
Copyright 2025.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClickhouseSpec) DeepCopyInto(out *ClickhouseSpec) {
	*out = *in
	if in.Nodes != nil {
		in, out := &in.Nodes, &out.Nodes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	in.Resources.DeepCopyInto(&out.Resources)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClickhouseSpec.
func (in *ClickhouseSpec) DeepCopy() *ClickhouseSpec {
	if in == nil {
		return nil
	}
	out := new(ClickhouseSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterStatus) DeepCopyInto(out *ClusterStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterStatus.
func (in *ClusterStatus) DeepCopy() *ClusterStatus {
	if in == nil {
		return nil
	}
	out := new(ClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FdbClusterStatus) DeepCopyInto(out *FdbClusterStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FdbClusterStatus.
func (in *FdbClusterStatus) DeepCopy() *FdbClusterStatus {
	if in == nil {
		return nil
	}
	out := new(FdbClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FdbSpec) DeepCopyInto(out *FdbSpec) {
	*out = *in
	if in.Nodes != nil {
		in, out := &in.Nodes, &out.Nodes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	in.Resources.DeepCopyInto(&out.Resources)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FdbSpec.
func (in *FdbSpec) DeepCopy() *FdbSpec {
	if in == nil {
		return nil
	}
	out := new(FdbSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MetaSpec) DeepCopyInto(out *MetaSpec) {
	*out = *in
	if in.Nodes != nil {
		in, out := &in.Nodes, &out.Nodes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	in.Resources.DeepCopyInto(&out.Resources)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MetaSpec.
func (in *MetaSpec) DeepCopy() *MetaSpec {
	if in == nil {
		return nil
	}
	out := new(MetaSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MgmtdSpec) DeepCopyInto(out *MgmtdSpec) {
	*out = *in
	if in.Nodes != nil {
		in, out := &in.Nodes, &out.Nodes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	in.Resources.DeepCopyInto(&out.Resources)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MgmtdSpec.
func (in *MgmtdSpec) DeepCopy() *MgmtdSpec {
	if in == nil {
		return nil
	}
	out := new(MgmtdSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitorSpec) DeepCopyInto(out *MonitorSpec) {
	*out = *in
	in.Resources.DeepCopyInto(&out.Resources)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitorSpec.
func (in *MonitorSpec) DeepCopy() *MonitorSpec {
	if in == nil {
		return nil
	}
	out := new(MonitorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodesInfo) DeepCopyInto(out *NodesInfo) {
	*out = *in
	if in.StorageNodes != nil {
		in, out := &in.StorageNodes, &out.StorageNodes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.StorageBackupNodes != nil {
		in, out := &in.StorageBackupNodes, &out.StorageBackupNodes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.FdbNodes != nil {
		in, out := &in.FdbNodes, &out.FdbNodes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodesInfo.
func (in *NodesInfo) DeepCopy() *NodesInfo {
	if in == nil {
		return nil
	}
	out := new(NodesInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StorageSpec) DeepCopyInto(out *StorageSpec) {
	*out = *in
	if in.Nodes != nil {
		in, out := &in.Nodes, &out.Nodes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.BackupNodes != nil {
		in, out := &in.BackupNodes, &out.BackupNodes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.TargetPaths != nil {
		in, out := &in.TargetPaths, &out.TargetPaths
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	in.Resources.DeepCopyInto(&out.Resources)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StorageSpec.
func (in *StorageSpec) DeepCopy() *StorageSpec {
	if in == nil {
		return nil
	}
	out := new(StorageSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetStatus) DeepCopyInto(out *TargetStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetStatus.
func (in *TargetStatus) DeepCopy() *TargetStatus {
	if in == nil {
		return nil
	}
	out := new(TargetStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UpgradeInfo) DeepCopyInto(out *UpgradeInfo) {
	*out = *in
	if in.ImageVersion != nil {
		in, out := &in.ImageVersion, &out.ImageVersion
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.UpgradeProcess != nil {
		in, out := &in.UpgradeProcess, &out.UpgradeProcess
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UpgradeInfo.
func (in *UpgradeInfo) DeepCopy() *UpgradeInfo {
	if in == nil {
		return nil
	}
	out := new(UpgradeInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThreeFsChainTable) DeepCopyInto(out *ThreeFsChainTable) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThreeFsChainTable.
func (in *ThreeFsChainTable) DeepCopy() *ThreeFsChainTable {
	if in == nil {
		return nil
	}
	out := new(ThreeFsChainTable)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ThreeFsChainTable) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThreeFsChainTableList) DeepCopyInto(out *ThreeFsChainTableList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ThreeFsChainTable, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThreeFsChainTableList.
func (in *ThreeFsChainTableList) DeepCopy() *ThreeFsChainTableList {
	if in == nil {
		return nil
	}
	out := new(ThreeFsChainTableList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ThreeFsChainTableList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThreeFsChainTableSpec) DeepCopyInto(out *ThreeFsChainTableSpec) {
	*out = *in
	if in.NewNode != nil {
		in, out := &in.NewNode, &out.NewNode
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.OldNode != nil {
		in, out := &in.OldNode, &out.OldNode
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThreeFsChainTableSpec.
func (in *ThreeFsChainTableSpec) DeepCopy() *ThreeFsChainTableSpec {
	if in == nil {
		return nil
	}
	out := new(ThreeFsChainTableSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThreeFsChainTableStatus) DeepCopyInto(out *ThreeFsChainTableStatus) {
	*out = *in
	if in.ProcessChainIds != nil {
		in, out := &in.ProcessChainIds, &out.ProcessChainIds
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThreeFsChainTableStatus.
func (in *ThreeFsChainTableStatus) DeepCopy() *ThreeFsChainTableStatus {
	if in == nil {
		return nil
	}
	out := new(ThreeFsChainTableStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThreeFsCluster) DeepCopyInto(out *ThreeFsCluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThreeFsCluster.
func (in *ThreeFsCluster) DeepCopy() *ThreeFsCluster {
	if in == nil {
		return nil
	}
	out := new(ThreeFsCluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ThreeFsCluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThreeFsClusterList) DeepCopyInto(out *ThreeFsClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ThreeFsCluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThreeFsClusterList.
func (in *ThreeFsClusterList) DeepCopy() *ThreeFsClusterList {
	if in == nil {
		return nil
	}
	out := new(ThreeFsClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ThreeFsClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThreeFsClusterSpec) DeepCopyInto(out *ThreeFsClusterSpec) {
	*out = *in
	in.Fdb.DeepCopyInto(&out.Fdb)
	in.Clickhouse.DeepCopyInto(&out.Clickhouse)
	in.Monitor.DeepCopyInto(&out.Monitor)
	in.Mgmtd.DeepCopyInto(&out.Mgmtd)
	in.Meta.DeepCopyInto(&out.Meta)
	in.Storage.DeepCopyInto(&out.Storage)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThreeFsClusterSpec.
func (in *ThreeFsClusterSpec) DeepCopy() *ThreeFsClusterSpec {
	if in == nil {
		return nil
	}
	out := new(ThreeFsClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThreeFsClusterStatus) DeepCopyInto(out *ThreeFsClusterStatus) {
	*out = *in
	if in.ConfigStatus != nil {
		in, out := &in.ConfigStatus, &out.ConfigStatus
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.FdbStatus != nil {
		in, out := &in.FdbStatus, &out.FdbStatus
		*out = make(map[string]FdbClusterStatus, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ClusterStatus != nil {
		in, out := &in.ClusterStatus, &out.ClusterStatus
		*out = make(map[string]map[string]ClusterStatus, len(*in))
		for key, val := range *in {
			var outVal map[string]ClusterStatus
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = make(map[string]ClusterStatus, len(*in))
				for key, val := range *in {
					(*out)[key] = val
				}
			}
			(*out)[key] = outVal
		}
	}
	if in.UnhealthyTargetStatus != nil {
		in, out := &in.UnhealthyTargetStatus, &out.UnhealthyTargetStatus
		*out = make(map[string][]TargetStatus, len(*in))
		for key, val := range *in {
			var outVal []TargetStatus
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = make([]TargetStatus, len(*in))
				copy(*out, *in)
			}
			(*out)[key] = outVal
		}
	}
	in.NodesInfo.DeepCopyInto(&out.NodesInfo)
	in.UpgradeInfo.DeepCopyInto(&out.UpgradeInfo)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThreeFsClusterStatus.
func (in *ThreeFsClusterStatus) DeepCopy() *ThreeFsClusterStatus {
	if in == nil {
		return nil
	}
	out := new(ThreeFsClusterStatus)
	in.DeepCopyInto(out)
	return out
}
